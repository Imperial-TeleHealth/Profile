name: Build and Push Pipeline

on:
  push:
    tags:
      - "v*"
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  Build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  Docker_Build_Push:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_SECRET }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build Docker image
        run: |
          docker buildx create --use --name mybuilder
          docker buildx inspect mybuilder --bootstrap
          docker buildx build \
            --platform linux/amd64 \
            -t ${{ steps.meta.outputs.tags }} \
            --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
            --build-arg DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
            --build-arg DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
            .

      - name: Push Docker image
        run: docker push ${{ steps.meta.outputs.tags }}
#        uses: docker/build-push-action@v5
#        with:
#          file: ./Dockerfile
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          build-args: |
#            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
#            DATABASE_URL=${{ secrets.DATABASE_URL }}
#            DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
#          builder: ${{ steps.setup-buildx.outputs.name }}
#          platform: linux/amd64
